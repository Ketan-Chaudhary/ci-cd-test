name: Deploy to EC2

on:
  push:
    branches:
      - "Deployment"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from GitHub
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up SSH and configure private key to connect to EC2
      - name: Decode EC2 SSH Private Key
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | base64 --decode > private_key.pem
          chmod 600 private_key.pem  # Set the correct permissions for the private key

      # Step 3: SSH into EC2 and clone the full repository
      - name: Clone repository to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            # Set up Git authentication with the GitHub token
            git config --global credential.helper store
            echo "https://${{ secrets.GH_TOKEN }}@github.com" > ~/.git-credentials

            # Clone the entire repository into a folder (same as the repo name, rufrent-mine)
            cd ~
            if [ ! -d "rufrent-mine" ]; then
              git clone https://github.com/Ketan-Chaudhary/rufrent-mine.git
            fi

            # # Go to the Frontend directory, install dependencies, and build
            # cd ~/rufrent-mine/Frontend
            # npm install
            # npm run build  # Build the frontend (Vite React)
            # sudo rm -rf /var/www/html/*  # Remove old files in Nginx directory
            # sudo cp -r ~/rufrent-mine/Frontend/dist/* /var/www/html/  # Copy new build to Nginx directory

            # # Restart Nginx to serve the new frontend build
            # sudo systemctl restart nginx

            # # Go to the server directory, install dependencies, and start backend
            # cd ~/rufrent-mine/backend
            # npm install
            # pm2 stop backend || true  # Stop the existing process if it exists
            # pm2 start server.js --name backend  # Start your backend process with PM2
            # pm2 save  # Save PM2 process list to restart on server reboot
          EOF

      # Step 4: Clean up private key
      - name: Clean up private key
        run: rm -f private_key.pem
