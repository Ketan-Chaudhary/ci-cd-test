name: Branch Merging Pipeline

concurrency:
  group: merge-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - "Asif_Branch"
      - "Pavan_Branch"
      - "Shiva_Branch"

jobs:
  merge-to-Staging:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: User Add
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Selective Merge to Staging
        run: |
          git checkout Staging
          git pull origin Staging

          # Merge specific directories based on source branch
          case "${{ github.ref_name }}" in
            "Asif_Branch") git checkout ${{ github.ref_name }} -- backend/ ;;
            "Pavan_Branch") git checkout ${{ github.ref_name }} -- frontend/ ;;
            "Shiva_Branch") git checkout ${{ github.ref_name }} -- frontend/ ;;
          esac

          git add .
          git commit -m "Auto-merge: ${{ github.ref_name }} → Staging" || echo "No changes to commit"
          git push origin Staging

  build-and-Test:
    needs: merge-to-Staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: Staging

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          # cache: "npm"

      - name: Frontend CI
        working-directory: Frontend
        run: |
          # npm ci
          # npm run build
          # npm Test

      - name: Backend CI
        working-directory: backend
        run: |
          # npm ci
          # npm Test
          # npm run lint

  merge-to-Test:
    needs: build-and-Test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all branches
        run: git fetch --all

      - name: Merge Staging to Test
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git fetch origin Staging Test
          git checkout Test
          git merge origin/Staging --no-ff --no-commit || {
           echo "::error::Merge conflict detected! Resolve conflicts in Test branch manually"
           git merge --abort
           exit 1
          }
          git commit -m "Auto-merge: Staging → Test"
          git push origin Test

  # deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Wait for 1 day before merging to Test
  #       run: sleep 15

  #     - name: Decode EC2 SSH Private Key
  #       run: |
  #         echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | base64 --decode > private_key.pem
  #         chmod 600 private_key.pem

  #     - name: Clone repository to EC2
  #       run: |
  #         ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
  #           cd ~
  #           if [ ! -d "rufrent-mine" ]; then
  #             git clone https://github.com/Ketan-Chaudhary/rufrent-mine.git
  #           fi
  #           cd ~/rufrent-mine/Frontend
  #           npm install
  #           npm run build
  #           sudo rm -rf /var/www/html/*
  #           sudo cp -r ~/rufrent-mine/Frontend/dist/* /var/www/html/
  #           sudo systemctl restart nginx
  #           cd ~/rufrent-mine/backend
  #           npm install
  #           pm2 stop backend || true
  #           pm2 start app.js --name backend
  #           pm2 save
  #         EOF

  #     - name: Clean up private key
  #       run: rm -f private_key.pem
