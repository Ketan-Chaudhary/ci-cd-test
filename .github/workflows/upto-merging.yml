name: Scheduled Branch Merging Pipeline

concurrency:
  group: merge-daily
  cancel-in-progress: true

on:
  schedule:
    - cron: "59 11 * * *" # 3 AM UTC every day
  workflow_dispatch: # Optional manual trigger

jobs:
  merge-to-Staging:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Staging
        uses: actions/checkout@v4
        with:
          ref: Staging
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Update Repository
        run: |
          git remote update  # Fetch all branches and tags
          git checkout Staging
          git pull --ff-only origin Staging

      - name: Apply Branch Changes
        run: |
          # Function to safely apply changes from a branch
          apply_changes() {
            branch="$1"
            directory="$2"
            
            if git show-ref --verify refs/remotes/origin/$branch >/dev/null; then
              echo "Applying changes from $branch to $directory"
              git checkout origin/$branch -- $directory
            else
              echo "::warning::Branch $branch not found. Skipping."
            fi
          }

          # Apply changes from each branch
          apply_changes Asif_Branch backend/
          apply_changes Pavan_Branch frontend/
          apply_changes Shiva_Branch frontend/

      - name: Commit Changes
        run: |
          git add .
          if ! git diff-index --quiet HEAD --; then
            git commit -m "Scheduled update: Merged feature branches at 3 AM UTC"
            echo "Changes committed"
          else
            echo "No changes to commit"
          fi

      - name: Push Changes Safely
        run: |
          git pull --rebase origin Staging  # Rebase any potential upstream changes
          git push origin Staging
          echo "Staging branch updated successfully"

  build-and-Test:
    needs: merge-to-Staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: Staging

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Frontend CI
        working-directory: frontend
        run: |
          # npm ci
          # npm run build
          # npm test

      - name: Backend CI
        working-directory: backend
        run: |
          # npm ci
          # npm test
          # npm run lint

  merge-to-Test:
    needs: build-and-Test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Merge Staging to Test
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          git checkout Test
          git pull origin Test
          if ! git merge origin/Staging --no-ff --no-commit; then
            echo "::error::Merge conflict detected! Resolve conflicts in Test branch manually"
            git merge --abort
            exit 1
          fi
          git commit -m "Auto-merge: Staging â†’ Test (Scheduled Nightly Merge)"
          git push origin Test
