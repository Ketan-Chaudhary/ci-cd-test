name: Full Merge Chain

on:
  push:
    branches:
      - "Asif_Branch"
      - "Pavan_Branch"
      - "Shiva_Branch"

jobs:
  merge-to-Staging:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Merge the appropriate folders to Staging
        run: |
          git checkout Staging
          git fetch origin Staging
          if [[ "${{ github.ref_name }}" == "Asif_Branch" ]]; then
            git checkout ${{ github.ref_name }} -- backend/
            git add backend/
            git commit -m "Auto-merge: ${{ github.ref_name }} → Staging (backend folder)"
          fi
          if [[ "${{ github.ref_name }}" == "Pavan_Branch" ]]; then
            git checkout ${{ github.ref_name }} -- frontend/
            git add frontend/
            git commit -m "Auto-merge: ${{ github.ref_name }} → Staging (frontend folder)"
          fi
          if [[ "${{ github.ref_name }}" == "Shiva_Branch" ]]; then
            git checkout ${{ github.ref_name }} -- frontend/
            git add frontend/
            git commit -m "Auto-merge: ${{ github.ref_name }} → Staging (frontend folder)"
          fi
          git push origin Staging

  merge-to-Test:
    needs: merge-to-Staging
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Wait for 1 day before merging to Test
        run: sleep 10

      - name: Merge to Test
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git fetch origin Staging Test
          git checkout Test
          git merge origin/Staging --no-ff --no-commit || {
            echo "::error::Merge conflict detected! Resolve conflicts in Test branch manually"
            git merge --abort
            exit 1
          }
          git commit -m "Auto-merge: Staging → Test"
          git push origin Test

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Wait for 1 day before merging to Test
        run: sleep 15

      - name: Decode EC2 SSH Private Key
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | base64 --decode > private_key.pem
          chmod 600 private_key.pem

      - name: Clone repository to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            cd ~
            if [ ! -d "rufrent-mine" ]; then
              git clone https://github.com/Ketan-Chaudhary/rufrent-mine.git
            fi
            cd ~/rufrent-mine/Frontend
            npm install
            npm run build
            sudo rm -rf /var/www/html/*
            sudo cp -r ~/rufrent-mine/Frontend/dist/* /var/www/html/
            sudo systemctl restart nginx
            cd ~/rufrent-mine/backend
            npm install
            pm2 stop backend || true
            pm2 start app.js --name backend
            pm2 save
          EOF

      - name: Clean up private key
        run: rm -f private_key.pem
