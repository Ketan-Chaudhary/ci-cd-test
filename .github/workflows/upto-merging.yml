name: Branch Merging Pipeline

concurrency:
  group: merge-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - "Asif_Branch"
      - "Pavan_Branch"

  schedule:
    - cron: "55 12 * * *" # This triggers the workflow at 12:30 PM UTC every day

jobs:
  merge-to-Staging:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Checkout Staging
        run: |
          git checkout Staging
          git pull origin Staging

      - name: Merge accumulated changes
        run: |
          # Fetch all changes from the branches
          git fetch origin Asif_Branch Pavan_Branch

          # Track changes from Asif_Branch
          git checkout Asif_Branch
          git diff --name-only Staging..Asif_Branch > changes.txt
          while read file; do
            git checkout Asif_Branch -- "$file"
            git add "$file"
            git commit -m "Auto-merge: $file from Asif_Branch → Staging"
          done < changes.txt
          rm -f changes.txt  # Clean up changes.txt after processing

          # Track changes from Pavan_Branch
          git checkout Pavan_Branch
          git diff --name-only Staging..Pavan_Branch > changes.txt
          while read file; do
            git checkout Pavan_Branch -- "$file"
            git add "$file"
            git commit -m "Auto-merge: $file from Pavan_Branch → Staging"
          done < changes.txt
          rm -f changes.txt  # Clean up changes.txt after processing

          # Push changes to Staging
          git push origin Staging

  build-and-Test:
    needs: merge-to-Staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: Staging

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          # cache: "npm"

      - name: Frontend CI
        working-directory: Frontend
        run: |
          # npm ci
          # npm run build
          # npm Test

      - name: Backend CI
        working-directory: backend
        run: |
          # npm ci
          # npm Test
          # npm run lint

  merge-to-Test:
    needs: build-and-Test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch all branches
        run: git fetch --all

      - name: Merge Staging to Test
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git fetch origin Staging Test
          git checkout Test
          git merge origin/Staging --no-ff --no-commit || {
           echo "::error::Merge conflict detected! Resolve conflicts in Test branch manually"
           git merge --abort
           exit 1
          }
          git commit -m "Auto-merge: Staging → Test"
          git push origin Test
