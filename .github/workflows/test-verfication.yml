name: Production Gatekeeper

concurrency:
  group: verification-${{ github.sha }}
  cancel-in-progress: false

on:
  push:
    branches:
      - test

jobs:
  verify-success-file:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: test
          fetch-depth: 0

      - name: Validate Success File
        run: |
          if ! git show HEAD:test-success.flag; then
            echo "::error::Test success file not found in latest commit!"
            exit 1
          fi

  promote-to-deployment:
    needs: verify-success-file
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: deployment

      - name: Merge Test to Deployment
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git pull origin deployment
          git merge test --no-ff -m "Production Release: Verified by $(git log -1 --pretty=format:'%ae' test)"
          git push origin deployment

      - name: Cleanup Test Branch
        run: |
          git push origin --delete test || echo "Test branch already deleted"

  trigger-deployment:
    needs: promote-to-deployment
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Deployment Workflow
        uses: actions/github-script@v6
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy.yml',
              ref: 'deployment'
            })
